/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.0.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1.0;

vertices
(
//block: (60*20*30 cm)
 (-0.002 -0.001 0) //0
 (0.002 -0.001 0)  //1
 (0.002 0.001 0)   //2
 (-0.002 0.001 0)   //3
 (-0.002 -0.001 0.05)  //4
 (0.002 -0.001 0.05)  //5
 (0.002 0.001 0.05)  //6
 (-0.002 0.001 0.05)  //7
 (-0.002 -0.001 0.15)  //8
 (0.002 -0.001 0.15)   //9
 (0.002 0.001 0.15)    //10
 (-0.002 0.001 0.15)   //11
 (-0.002 -0.001 0.4)  //12      
 (0.002 -0.001 0.4)   //13     
 (0.002 0.001 0.4)    //14    
 (-0.002 0.001 0.4)   //15   
 );


blocks
(
  hex (0 1 2 3 4 5 6 7) (1 1 200) simpleGrading (1 1 1)
  hex (4 5 6 7 8 9 10 11) (1 1 185) simpleGrading (1 1 4)
  hex (8 9 10 11 12 13 14 15) (1 1 250) simpleGrading (1 1 1)
);

// ************************************************************************* //
boundary
    (
        wall_bottom             // patch name
        {
            type wall;    // patch type for patch 0
            faces ((0 3 2 1));
        } 
        wall_top
        {
            type patch;
            faces ((12 13 14 15));
        }
        front1 
        {
            type cyclic;
            neighbourPatch back1;
            faces ((0 1 5 4));
        }
        back1
        {
             type cyclic;
             neighbourPatch front1;
             faces ((7 6 2 3));
        }
        left1
        {
              type           cyclic;
              neighbourPatch right1;
              faces          ((7 3 0 4));
        }
        right1
        {
              type           cyclic;
              neighbourPatch left1;
              faces          ((6 5 1 2));
        }
        front2 
        {
            type cyclic;
            neighbourPatch back2;
            faces ((4 5 9 8));
        }
        back2
        {
             type cyclic;
             neighbourPatch front2;
             faces ((7 6 10 11));
        }
        left2
        {
              type           cyclic;
              neighbourPatch right2;
              faces          ((11 7 4 8));
        }
        right2
        {
              type           cyclic;
              neighbourPatch left2;
              faces          ((10 6 5 9));
        }
        front3
        {
            type cyclic;
            neighbourPatch back3;
            faces ((8 9 13 12));
        }
        back3
        {
             type cyclic;
             neighbourPatch front3;
             faces ((11 10 14 15));
        }
        left3
        {
              type           cyclic;
              neighbourPatch right3;
              faces          ((15 11 8 12));
        }
        right3
        {
              type           cyclic;
              neighbourPatch left3;
              faces          ((14 10 9 13));
        }
    );
// ************************************************************************* //
